{"version":3,"sources":["logo.svg","reducers/fullpageReducer.js","reducers/index.js","actions/types.js","store.js","layouts/header.jsx","components/landing.jsx","components/About.jsx","components/mywork.jsx","components/getInTouch.jsx","components/Home.jsx","actions/callFullPageAction.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","fullpage","fetchingMethods","combineReducers","home","state","arguments","length","undefined","action","type","payload","store","createStore","rootReducer","applyMiddleware","thunk","HeaderSection","react_default","a","createElement","className","Component","Banner","Fragment","About","MyWork","GetInTouch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleForm","e","axios","post","headers","Accept","then","response","console","log","catch","error","preventDefault","handleFields","setState","defineProperty","target","name","value","surname","email","message","onSubmit","htmlFor","id","onChange","React","HomePage","fullpageApi","bind","assertThisInitialized","callFullPageProps","_this2","header","react_fullpage_default","scrollOverflow","navigation","scrollingSpeed","render","_ref","Wrapper","landing","components_About","mywork","getInTouch","PureComponent","connect","fullApiMethods","data","dispatch","App","react_redux_es","Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d9078444.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import * as ts from '../actions/types'\n\nconst initialState =  {\n    fullpage : '',\n    fetchingMethods : true\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){    \n        case ts.FULLAPI_ACTION : \n            return {\n                fullpage : action.payload,\n                fetchingMethods : false\n            }\n        default :\n        return state\n    }\n}","import {combineReducers} from 'redux'\nimport home from './fullpageReducer'\n\nexport default combineReducers({\n    home\n})","export const FULLAPI_ACTION = 'FULLAPI_ACTION'","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers/index'\n\nconst store =  createStore(rootReducer, applyMiddleware(thunk))\n\nexport default store","import React, { Component } from 'react';\n\nclass HeaderSection extends Component {\n    render() {\n        return (\n            <div className=\"heade-section\">\n                <div className=\"logo\">\n                    <span>S</span>\n                    <span>K</span>\n                    <span>A</span>\n                    <span>N</span>\n                    <span>D</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default HeaderSection;\n    ","import React, { Component } from 'react';\n\nclass Banner extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"section-block\">\n                    <div className=\"about-title\">\n                        About\n                    </div>\n                    <div className=\"banner\">\n                        Image\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Banner;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"section-block\">\n                    <h2>About Me</h2>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass MyWork extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"section-block\">\n                    <h2>Work</h2>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MyWork;\n","import React from \"react\";\nimport axios from \"axios\"; // For making client request.\n\n\nclass GetInTouch extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {name: \"\", surname: \"\", email: \"\", message: \"\"};\n  }\n\n  handleForm = e => {\n    axios.post(\n      \"https://formcarry.com/s/6_NRXcLovqmX\", \n      this.state, \n      {headers: {\"Accept\": \"application/json\"}}\n      )\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n\n    e.preventDefault();\n  }\n\n  handleFields = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    return (\n      <form onSubmit={this.handleForm}>\n        <label htmlFor=\"name\">Name</label>\n        <input type=\"text\" id=\"name\" name=\"name\" onChange={this.handleFields} />\n\n        <label htmlFor=\"surname\">Surname</label>\n        <input type=\"text\" id=\"surname\" name=\"surname\" onChange={this.handleFields} />\n\n        <label htmlFor=\"email\">Email</label>\n        <input type=\"email\" id=\"email\" name=\"email\" onChange={this.handleFields} />\n\n\n        <label htmlFor=\"email\">Contact Number</label>\n        <input type=\"text\" id=\"email\" name=\"phone\" onChange={this.handleFields} />\n\n        <label htmlFor=\"message\">Your Message</label>\n        <textarea name=\"message\" id=\"message\" onChange={this.handleFields}></textarea>\n\n        <button type=\"submit\">Send</button>\n      </form>\n    );\n  }\n}\n\nexport default GetInTouch;","import React, { PureComponent } from 'react'\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport {connect} from 'react-redux'\n\n// Layouts\nimport HeaderSection from '../layouts/header'\n\n// HomePage Components.\nimport Banner from './landing'\nimport About from './About'\nimport MyWork from './mywork'\nimport GetInTouch from './getInTouch'\n\n// FullpageAction\nimport {callFullPage} from '../actions/callFullPageAction'\n\nclass HomePage extends PureComponent {\n\n    constructor(props){\n        super(props)\n        this.fullpageApi.bind(this)\n    }\n\n    fullpageApi(fullpageApi){\n        this.props.callFullPageProps(fullpageApi)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <HeaderSection/>\n                    <ReactFullpage\n                        scrollOverflow={true}\n                        navigation={true}\n                        scrollingSpeed = {1000} \n                        render={({ state, fullpageApi }) => {\n                            \n                        // Dispatchtofullpageevents\n                        this.fullpageApi(fullpageApi)\n\n                        return (\n                            <ReactFullpage.Wrapper>\n                                <div className=\"section banner\">\n                                    <Banner/>\n                                </div>\n                                <div className=\"section about\">\n                                    <About/>\n                                </div>\n                                <div className=\"section mywork\">\n                                    <MyWork/>\n                                </div>\n                                <div className=\"section getintouch\">\n                                    <GetInTouch/>\n                                </div>\n                            </ReactFullpage.Wrapper>\n                    );\n                }}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n       fullApiMethods : state.data\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        callFullPageProps :  (fullpageApi) => dispatch(callFullPage(fullpageApi))\n    }\n}\n\n\n\n// Connecting component with store\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","import * as ts from './types'\n\nexport const callFullPage = (data) => {\n    return {\n        type : ts.FULLAPI_ACTION,\n        payload : data\n    }\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport store from './store'\nimport {Provider} from 'react-redux'\nimport './App.css';\n\n\n// Home\nimport Home from './components/Home'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n          <Home/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}