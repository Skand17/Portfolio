{"version":3,"sources":["reducers/HomePageReducer.js","reducers/index.js","store.js","Utils/Input.js","components/getInTouch.jsx","components/landing.jsx","components/About.jsx","components/Home.jsx","components/mywork.jsx","App.js","serviceWorker.js","index.js","assets/profile.png"],"names":["initialState","list","HomeReducer","state","arguments","length","undefined","type","combineReducers","store","createStore","rootReducer","applyMiddleware","thunk","CustomInputComponent","_ref","field","_ref$form","form","touched","errors","props","Object","objectWithoutProperties","react_default","a","createElement","assign","name","className","CustomTextareaComponent","_ref2","_ref2$form","GetInTouch","formik_esm","initialValues","number","email","message","validationSchema","Yup","max","required","onSubmit","values","setSubmitting","obj","Name","Email","Contact Number","Message","axios","post","headers","Accept","then","response","swal","title","icon","buttons","catch","error","submitForm","_ref3","isSubmitting","Container","FormGroup","htmlFor","component","Button","color","disabled","Banner","Fragment","dist_default","ms","Component","About","Row","Col","md","sm","xs","src","Profile","HomePage","dist_index_es","triggerHook","duration","pin","index_es","wrapper","id","landing","from","x","to","components_About","y","getInTouch","PureComponent","connect","objectSpread","App","react_redux_es","Home","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.407a731e.chunk.js","sourcesContent":["let initialState = {\n    list : []\n}\n\nlet HomeReducer = (state = initialState, action) => {\n    switch(action.type){\n        case \"Login\": \n        return true\n        default :\n        return state\n    }\n}\n\nexport default HomeReducer","import {combineReducers} from 'redux'\nimport HomeReducer from './HomePageReducer'\n\nexport default combineReducers({\n    HomeReducer\n})","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport rootReducer from './reducers/index'\n\nconst store =  createStore(rootReducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react'\n\nexport const CustomInputComponent = ({\n        field, \n        form: { touched, errors },\n        ...props\n    }) => (\n        <div>\n        <input type=\"text\" {...field} {...props} />\n            {touched[field.name] &&\n            errors[field.name] && <div className=\"error\">{errors[field.name]}</div>}\n        </div>\n  );\n  \n\n  export const CustomTextareaComponent = ({\n        field, \n        form: { touched, errors },\n        ...props\n    }) => (\n        <div>\n        <textarea type=\"text\" {...field} {...props} />\n        {touched[field.name] &&\n            errors[field.name] && <div className=\"error\">{errors[field.name]}</div>}\n        </div>\n);\n\n  ","import React from 'react';\nimport axios from 'axios'\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport swal from 'sweetalert'\nimport { CustomTextareaComponent, CustomInputComponent} from \"../Utils/Input\"\nimport { Button , FormGroup, Container} from 'reactstrap';\n  \n  const GetInTouch = () => {\n    const submitForm = (values,{setSubmitting}) => {\n        let obj = {\n          \"Name\" : values.name,\n          \"Email\" : values.email,\n          \"Contact Number\" : values.number,\n          \"Message\" : values.message\n      }\n      axios.post(\n          \"https://formcarry.com/s/6_NRXcLovqmX\", \n          obj, \n          {headers: {\"Accept\": \"application/json\"}}\n        )\n        .then(function (response) {\n            setSubmitting(false)\n            swal({\n                  title : \"Thanks for your query. We'll get back to you soon\",\n                  icon : \"success\",\n                  buttons: true\n            })\n        })\n        .catch(function (error) {\n            setSubmitting(false)\n        });\n    }\n\n    return (\n      <Formik\n        initialValues={{ name: '', number: '', email: '', message: '' }}\n        validationSchema={Yup.object({\n            name: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n            number: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n            email: Yup.string().email('Invalid email address').required('Required'),\n            message : Yup.string().max(20, 'INvalid').required('Required'),\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          submitForm(values,{setSubmitting})\n        }}\n      >\n      {({\n        isSubmitting,\n      }) => (\n        <Container>\n            <div className=\"form-container\">\n              <h2>Have any query ?</h2>\n              <span className=\"inner-text\">I've got your back !! </span>\n                <Form>\n                  <FormGroup>\n                    <label htmlFor=\"name\">Name</label>\n                      <Field className=\"form-control\" component={CustomInputComponent} name=\"name\" type=\"text\" />\n                  </FormGroup>\n                  <FormGroup>\n                      <label htmlFor=\"number\">Phone number</label>\n                      <Field className=\"form-control\" component={CustomInputComponent} name=\"number\" type=\"text\" />\n                  </FormGroup>\n                  <FormGroup>\n                      <label htmlFor=\"email\">Email Address</label>\n                      <Field className=\"form-control\"component={CustomInputComponent}  name=\"email\" type=\"email\" />\n                  </FormGroup>\n                  <FormGroup>\n                      <label htmlFor=\"message\">Message</label>\n                      <Field className=\"form-control\" component={CustomTextareaComponent} name=\"message\" />\n                  </FormGroup>\n                    <Button color=\"primary\" type=\"submit\" disabled={isSubmitting}>{isSubmitting ? \"Submitting...\" : \"Submit\"}</Button>\n                </Form>\n            </div>\n        </Container>\n      )}\n      </Formik>\n    );\n  };;\n\n  export default GetInTouch","import React, { Component } from 'react';\nimport { Button } from 'reactstrap';\nimport Typing from 'react-typing-animation';\n\n\nclass Banner extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"banner-name\">\n                    <Typing  ms={1000} >\n                         <h1 className=\"name\">Skand Mishra</h1>\n                    </Typing>\n                     <h2>Designer, Front-end Developer</h2> \n                     <p>I design and code beautifully simple things, and I love what I do.</p>\n                \n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Banner;\n","import React, { Component } from 'react';\nimport {Row,Col} from 'reactstrap'\n\nimport Profile from \"../assets/profile.png\"\n\n// ABout imahe \n\nclass About extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Row>\n                    <Col md={6} sm={6} xs={12}>\n                        <div className=\"left-image\">\n                            <span><img src={Profile}/></span>\n                        </div>\n                    </Col>\n                    <Col  md={6} sm={6} xs={12}>\n                        <div className=\"right-image\">\n                            <h2>About</h2>\n                            <p>\n                                Experienced Software Engineer working in a Computer software industry. Skilled in Data structures and algorithms, HTML, JavaScript, React Js, Cascading Style Sheets (CSS) and SCSS.Strong professional graduated from Sri ramswaroop college of management. (Lucknow University)\n                                Building state-of-the-art,ease to use, user-friendly websites and applications is truly a passion of mine.\n                                I actively seek out new technologies and stay up-to-date on industry trends and advancements.  \n                            </p>\n                        </div>\n                    </Col>\n                </Row>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default About;\n","import React, { PureComponent } from 'react'\nimport { Tween, Timeline } from 'react-gsap';\nimport {connect} from 'react-redux'\nimport styled from 'styled-components';\nimport { Controller, Scene } from 'react-scrollmagic';\n\n// Component\nimport GetInTouch from \"../components/getInTouch\"\nimport Landing from \"../components/landing\"\nimport About from \"../components/About\"\nimport MyWork from \"../components/mywork\"\n\nclass HomePage extends PureComponent {\n    render() {\n        return (\n            <div className=\"controller-block\">\n                    <Controller>\n                        <Scene\n                            triggerHook=\"onLeave\"\n                            duration=\"300%\"\n                            pin>\n                            <Timeline\n                            wrapper={<div id=\"pinContainer\" />}\n                            >\n                            <section className=\"panel blue landing-banner\"><Landing/></section>\n                                <Tween\n                                    from={{ x: '-100%' }}\n                                    to={{ x: '0%' }}\n                                >\n                                    <section className=\"panel turqoise about-banner\"><About/></section>\n                                </Tween>\n                                {/* <Tween\n                                    from={{ x: '100%' }}\n                                    to={{ x: '0%' }}\n                                >\n                                    <section className=\"panel green work-banner\"><MyWork/></section>\n                                </Tween> */}\n                                <Tween\n                                    from={{ y: '-100%' }}\n                                    to={{ y: '0%' }}\n                                >   \n                                    <section className=\"panel bordeaux getintouch-banner\"> \n                                         <GetInTouch/>\n                                    </section>\n                                </Tween>    \n                            </Timeline>\n                        </Scene>\n                        </Controller>\n            </div>\n        )\n    }\n}\n\nconst mapstateToProps = state => {\n    return {\n        ...state\n    }\n}\n\n// Connecting component with store\nexport default connect(mapstateToProps)(HomePage)","import React, { Component } from 'react';\n\nclass MyWork extends Component {\n    render() {\n        return (\n            <React.Fragment>\n               \n            </React.Fragment>\n        );\n    }\n}\n\nexport default MyWork;\n","import React, { Component } from 'react';\nimport store from './store'\nimport {Provider} from 'react-redux'\nimport './App.css';\n\n\n// Home\nimport Home from './components/Home'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n          <Home/>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/profile.9348507f.png\";"],"sourceRoot":""}